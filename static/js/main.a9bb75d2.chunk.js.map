{"version":3,"sources":["stores/TodoModel.js","stores/TodoStore.js","components/todoentry.js","components/footer.js","components/todoitem.js","components/todoitems.js","components/todofooter.js","App.js","serviceWorker.js","index.js"],"names":["TodoModel","_class","store","title","completed","id","_classCallCheck","this","_initializerDefineProperty","_descriptor","_descriptor2","_createClass","key","value","_applyDecoratedDescriptor","prototype","observable","configurable","enumerable","writable","initializer","action","Object","getOwnPropertyDescriptor","todoStore","TodoStore","_this","_descriptor3","lastID","autorun","copiedTodos","todos","slice","removeCompleted","bind","removeTodo","push","filterCondition","filter","todo","replace","index","findIndex","newArray","concat","_toConsumableArray","get","length","computed","TodoEntry","_Component","_getPrototypeOf2","_len","arguments","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","state","handleKeyDown","event","keyCode","preventDefault","addTodo","setState","_inherits","_this2","React","createElement","class","onChange","e","target","onKeyDown","placeholder","autofocus","Component","Footer","TodoItem","observer","onToggle","props","toggle","type","checked","onClick","TodoItems","for","getTodos","map","TodoFooter","selectedElem","filteredTodos","todoLength","handleClick","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9bb75d2.chunk.js","sourcesContent":["import { observable, action } from \"mobx\";\n\nexport default class TodoModel {\n  store\n  id\n  @observable title\n  @observable completed\n\n  constructor(store, title, completed, id) {\n    this.title = title;\n    this.completed = completed;\n    this.id = id;\n    this.store = store;\n  }\n\n  @action\n  toggle() {\n    this.completed = !this.completed;\n  }\n}\n","import { observable, action, computed, autorun } from \"mobx\";\nimport TodoModel from \"./TodoModel\";\n\nclass TodoStore {\n  @observable todos = [];\n  @observable copiedTodos = [];\n  @observable len = 0;\n  lastID = 0;\n\n  constructor(){\n    autorun(()=>{\n      this.copiedTodos = this.todos.slice();\n    })\n    this.removeCompleted = this.removeCompleted.bind(this)\n    this.removeTodo = this.removeTodo.bind(this)\n  }\n\n  @action\n  addTodo(title) {\n    this.todos.push(new TodoModel(this, title, false, this.lastID++));\n  }\n\n  @action\n  copyTodos(){\n    this.copiedTodos = this.todos.slice();\n  }\n\n  @action\n  filteredTodos(filterCondition){\n    if (filterCondition){\n      this.copiedTodos = this.todos.filter(filterCondition).slice();\n    } else {\n      this.copiedTodos = this.todos.slice();\n    }\n  }\n\n  removeCompleted() {\n    this.copiedTodos = this.todos.filter(todo=>todo.completed===false).slice();\n    this.todos.replace(this.copiedTodos);\n  }\n\n  @action\n  removeTodo(key) {\n    const index = this.todos.findIndex(todo=>todo.id===key);\n    if (index !== -1) {\n      const newArray = [...this.todos.slice(0, index), ...this.todos.slice(index + 1)];\n      this.todos.replace(newArray);\n    }\n  }\n\n  getTodos(){\n    return this.copiedTodos;\n  }\n\n  @computed\n  get todoLength(){\n    return this.todos.length;\n  }\n\n}\n\nconst todoStore = new TodoStore();\nexport default todoStore;\n","import React, { Component } from \"react\";\nimport todoStore from \"../stores/TodoStore\";\n\nclass TodoEntry extends Component {\n  state = {\n    value: \"\",\n  };\n\n  handleKeyDown = (event) => {\n    if (event.keyCode !== 13) {\n      return;\n    }\n    event.preventDefault();\n    todoStore.addTodo(this.state.value);\n    this.setState({ value: \"\" });\n  };\n  render() {\n    return (\n      <header class=\"header\">\n        <h1>todos</h1>\n        <input\n          value={this.state.value}\n          onChange={(e) => this.setState({ value: e.target.value })}\n          onKeyDown={(event) => this.handleKeyDown(event)}\n          class=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          autofocus\n        />\n      </header>\n    );\n  }\n}\n\nexport default TodoEntry;\n","import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer>\n        <strong>Masoud Dashtifard</strong>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import { observer } from \"mobx-react\";\nimport React, { Component } from \"react\";\nimport todoStore from \"../stores/TodoStore\";\n\n@observer\nclass TodoItem extends Component {\n  onToggle = () => {\n    this.props.todo.toggle();\n  };\n\n  render() {\n    const { todo } = this.props;\n    return (\n      <li class={todo.completed ? \"completed\" : \"\"} key={todo.id}>\n        <div class=\"view\">\n          <input\n            onChange={this.onToggle}\n            class=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n          />\n          <label>{todo.title}</label>\n          <button\n            class=\"destroy\"\n            onClick={() => todoStore.removeTodo(todo.id)}\n          ></button>\n        </div>\n        <input class=\"edit\" value=\"Create a TodoMVC template\" />\n      </li>\n    );\n  }\n}\n\nexport default TodoItem;\n","import React, { Component } from \"react\";\nimport TodoItem from \"./todoitem\";\nimport { observer } from \"mobx-react\";\nimport todoStore from \"../stores/TodoStore\";\n\n@observer\nclass TodoItems extends Component {\n  render() {\n    return (\n      <section class=\"main\">\n        <input id=\"toggle-all\" class=\"toggle-all\" type=\"checkbox\" />\n        <label for=\"toggle-all\">Mark all as complete</label>\n        <ul class=\"todo-list\">\n          {todoStore.getTodos().map((todo) => {\n            return <TodoItem todo={todo} />;\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default TodoItems;\n","import React, { Component } from \"react\";\nimport todoStore from \"../stores/TodoStore\";\nimport { observer } from \"mobx-react\";\n\n@observer\nclass TodoFooter extends Component {\n  state = {\n    selectedElem: null\n  }\n\n  handleClick(key){\n    this.setState({selectedElem:key})\n    if (key===\"all\"){\n      todoStore.filteredTodos()\n    } else if (key===\"active\"){\n      todoStore.filteredTodos(todo=>todo.completed===false)\n    } else if (key===\"completed\"){\n      todoStore.filteredTodos(todo=>todo.completed===true)\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    return (\n      <footer class=\"footer\">\n        <span class=\"todo-count\">\n          <strong>{todoStore.todoLength}</strong> item left\n        </span>\n        <ul class=\"filters\">\n          <li key=\"all\" onClick={()=>this.handleClick(\"all\")}>\n            <a class={this.state.selectedElem===\"all\" && \"selected\"} href=\"#/\">All</a>\n          </li>\n          <li key=\"active\" onClick={()=>this.handleClick(\"active\")}>\n            <a class={this.state.selectedElem===\"active\" && \"selected\"} href=\"#/\">Active</a>\n          </li>\n          <li key=\"completed\" onClick={()=>this.handleClick(\"completed\")}>\n            <a class={this.state.selectedElem===\"completed\" && \"selected\"} href=\"#/\">Completed</a>\n          </li>\n        </ul>\n        <button class=\"clear-completed\" onClick={todoStore.removeCompleted}>Clear completed</button>\n      </footer>\n    );\n  }\n}\n\nexport default TodoFooter;\n","import React, { Component } from \"react\";\nimport { observer } from \"mobx-react\";\nimport \"./App.css\";\nimport TodoEntry from \"./components/todoentry\";\nimport Footer from \"./components/footer\";\nimport TodoItems from \"./components/todoitems\";\nimport TodoFooter from \"./components/todofooter\";\n\n@observer\nclass App extends Component {\n  render() {\n    return [\n      <section class=\"todoapp\">\n        <TodoEntry />\n        <TodoItems />\n        <TodoFooter />\n      </section>,\n      <Footer />,\n    ];\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}